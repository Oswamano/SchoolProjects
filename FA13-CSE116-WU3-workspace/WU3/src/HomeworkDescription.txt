CSE116 WU3

***************************************************************************
** Academic Integrity reminder                                           **
***************************************************************************
** You are submitting this write-up for INDIVIDUAL CREDIT.  As such, you **
** must work on it as an INDIVIDUAL.  To do otherwise is a violation of  **
** academic integrity.                                                   **
***************************************************************************

INSTRUCTIONS:
-------------
Your task is to define a class named "WriteUp", in a package named "code",
with one method named "solution", as described below.

/**************************************************************************
 * @param  a String denoting the inputPath the path on the local filesystem
 *         to the input file
 * @return a HashMap<String,String> of name:telephone number mappings, as
 *         described below.
 *
 * The file will contain names and telephone numbers, in the format indicated
 * by this example:
 * 
 * Anna:645-3180
 * Bob Smith:1-905-645-3181x1294
 * Miss Christina R. Jones:+011-46-017-364388
 * 
 * Each line contains only one name and only one telephone number.  The name
 * consists of all the characters from the start of the line to the colon
 * character, ':'.  The telephone number consists of all the characters after
 * the colon character to the end of the line (which will always be denoted by
 * a newline character, '\n').
 *
 * The first name:telephone number combination will appear on the first line
 * the file.  The last name:telephone number combination will appear on the
 * last line of the file (terminated by a newline character).  There will be
 * no blank lines in the input file.  Note that since telephone numbers can
 * contain characters other than digits, they must be read and stored as Strings.
 * 
 * You must use only CharacterFromFileReader to read characters from the input
 * file.  Recall that the CharacterFromFileReader functions like an iterator, and 
 * provides these methods:
 *     boolean hasNext()
 *     Character next()
 * 
 * In order to keep your code readable, break your code into several methods.
 * Define meaningful private helper methods that you call from the required
 * public method.
 **************************************************************************/
 